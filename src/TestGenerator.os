Перем Обмен;
Перем Данные;


Функция ПолучитьСписокМетодов() Экспорт
	РегВыражение = Новый РегулярноеВыражение("^\s*(процедура|функция|procedure|function)\s+(.*)\(");
	РегВыражениеЭкспорт = Новый РегулярноеВыражение("\)\s+(.*)Экспорт");
	РегВыражениеТестМетод = Новый РегулярноеВыражение("(TestMethod:)\s+(.*)");
	РегВыражение.ИгнорироватьРегистр = Истина;

	КолСтрок = СтрЧислоСтрок(Данные)-1;

	МассивМетодов = Новый Массив;

	СписМетодов = "";
	Для А = 0 По КолСтрок Цикл
		Стр = СокрЛП(СтрПолучитьСтроку(Данные, А));

		Если СтрНачинаетсяС(Стр, "//#") Тогда
			Стр = Сред(Стр, 4);
			Если СтрНайти(Стр, "Параметры:") <> 0 Тогда
				СтруктураМетода = Новый Структура;
				СтруктураМетода.Вставить("Параметры", Новый Структура);
				

				ПараметрыМетода = Новый Структура;
				ВозвращаемыеЗначения = Новый Структура;
			ИначеЕсли СтрНайти(Стр, "Возвращаемое значение:") <> 0 Тогда
				СтруктураМетода.Вставить("Возврат", Новый Структура);
			ИначеЕсли СтрНайти(Стр, "TestMethod:") <> 0 Тогда
				ИмяТеста = "";
				Совпадения = РегВыражениеТестМетод.НайтиСовпадения(Стр);
				Если Совпадения.Количество() > 0 Тогда
					ИмяТеста = Совпадения[0].Группы[2].Значение;
				КонецЕсли;
				СтруктураМетода.Вставить("Тест", ИмяТеста);
			Иначе
				ДопИнфо = СтрРазделить(Стр, "-", Истина);

				Если СтруктураМетода = Неопределено Тогда
					СтруктураМетода = Новый Структура;
				КонецЕсли;

				ЭтоВозврат = СтруктураМетода.Свойство("Возврат");
				Если ЭтоВозврат Тогда
					ВозвращаемыеЗначения.Вставить(СокрЛП(ДопИнфо[0]));
				Иначе
					ПараметрыМетода.Вставить(СокрЛП(ДопИнфо[0]),СокрЛП(ДопИнфо[1]));
				КонецЕсли;

			КонецЕсли;

		Иначе
			Совпадения = РегВыражение.НайтиСовпадения(Стр);
			Если Совпадения.Количество() > 0 Тогда
				Для каждого Сп Из Совпадения Цикл
					СпГр = Сп.Группы;

					ТипМетода = СокрЛП(СпГр[1].Значение);
					ТипМетода = ?(СокрЛП(СпГр[1].Значение) = "procedure","Процедура",ТипМетода);
					ТипМетода = ?(СокрЛП(СпГр[1].Значение) = "function","Функция",ТипМетода);

					Если СтруктураМетода = Неопределено Тогда
						СтруктураМетода = Новый Структура;
					КонецЕсли;

					СтруктураМетода.Вставить("Тип",ТипМетода);
					СтруктураМетода.Вставить("Имя",СокрЛП(СпГр[2].Значение));
				КонецЦикла;

				Если РегВыражениеЭкспорт.НайтиСовпадения(Стр).Количество() > 0 Тогда
					СтруктураМетода.Вставить("Экспорт", Истина);	
				Иначе
					СтруктураМетода.Вставить("Экспорт", Ложь);	
				КонецЕсли;

				ПараметрыМетода = ?(ПараметрыМетода=Неопределено,Новый Структура,ПараметрыМетода);

				СтруктураМетода.Вставить("Тест", ИмяТеста);
				СтруктураМетода.Вставить("Параметры", ПараметрыМетода);
				СтруктураМетода.Вставить("Возврат", ВозвращаемыеЗначения);

				МассивМетодов.Добавить(СтруктураМетода);

				СтруктураМетода = Неопределено;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	Возврат МассивМетодов;
КонецФункции

Функция ПолучитьСписокМетодовБезТестов() Экспорт
	СписокМетодов = ПолучитьСписокМетодов();

	Результат = Новый Массив;
	Для каждого Стр Из СписокМетодов Цикл
		Если Стр.Экспорт Тогда
			Если СокрЛП(Стр.Тест) = "" Тогда
				Результат.Добавить(Стр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции

Функция ПолучитьСписокМетодовCТестами() Экспорт
	СписокМетодов = ПолучитьСписокМетодов();
	Результат = Новый Массив;
	Для каждого Стр Из СписокМетодов Цикл
		Если Стр.Экспорт Тогда
			Если СокрЛП(Стр.Тест) <> "" Тогда
				Результат.Добавить(Стр);

			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция СоздатьТесты() Экспорт
	МетодыБезТестов = ПолучитьСписокМетодовБезТестов();

	СтрРезультат = "";
	СтрДобавитьВТесты = "";

	Для каждого Метод Из МетодыБезТестов Цикл

		СтрИмяТестМетода = "Тест_Должен_" + (?(Метод.Тип="Процедура","","Вернуть_")) + СокрЛП(Метод.Имя);

		Стр = "";

		Стр = Стр + "Процедура " + СтрИмяТестМетода + "() Экспорт";
		Стр = Стр + Символы.ПС;
		Стр = Стр + "	Сообщить(""Тест пустышка!"");";

		ПараметрыСтрокой = "";
		
		ПараметрыМетода = Метод.Параметры;

		Для каждого ПараметрМетода Из ПараметрыМетода Цикл
			Стр = Стр + Символы.ПС;
			Стр = Стр + "	// " + ПараметрМетода.Ключ + " = Неопределено;";
			ПараметрыСтрокой = ПараметрыСтрокой + ", " + ПараметрМетода.Ключ;
		КонецЦикла;
		ПараметрыСтрокой = Сред(ПараметрыСтрокой,2);
		

		Стр = Стр + Символы.ПС;
		Стр = Стр + "	// " + (?(Метод.Тип="Процедура","","Результат ="))+ " ОбъектТестирования." + Метод.Имя + "(" + СокрЛП(ПараметрыСтрокой) + ");";

		Стр = Стр + Символы.ПС;
		Стр = Стр + "КонецПроцедуры";
		Стр = Стр + Символы.ПС;
		
		
		СтрРезультат = СтрРезультат + Символы.ПС + Стр;
		СтрДобавитьВТесты = СтрДобавитьВТесты + Символы.ПС + "СписокТестов.Добавить(""" + СтрИмяТестМетода + """);";
	КонецЦикла;

	СтрДобавитьВТесты = СтрДобавитьВТесты + Символы.ПС + СтрРезультат;

	Возврат СтрДобавитьВТесты;
КонецФункции // СоздатьТесты()

Процедура Инициализация() 
	Обмен = Новый РаботаСТекстовымиФайлами;
	Данные = Обмен.ПолучитьТекстИзФайла("tests/in.os");
КонецПроцедуры

Инициализация();