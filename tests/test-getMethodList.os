#Использовать ".."

#Использовать asserts

Перем юТест;
Перем ГенераторТестов;

Процедура Инициализация()
	ГенераторТестов = Новый ГенераторТестов;
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("Тест_Должен_ПолучитьСписокМетодовCТестами");
	СписокТестов.Добавить("Тест_Должен_ПолучитьСписокМетодовБезТестов");
	СписокТестов.Добавить("Тест_Должен_СоздатьТесты");
		
	Возврат СписокТестов;
	
КонецФункции

Процедура Тест_Должен_ПолучитьСписокМетодовCТестами() Экспорт
	Результат = ГенераторТестов.ПолучитьСписокМетодовCТестами();

	СписМетодовСтр = "";
	Для каждого Стр Из Результат Цикл
		СписМетодовСтр = СписМетодовСтр + "," + Стр.Имя;
	КонецЦикла;

	СписМетодов = ",КоличествоЭлементов,ПреобразоватьКонтрагента";

	Ожидаем.Что(СписМетодовСтр).Равно(СписМетодов);

КонецПроцедуры

Процедура Тест_Должен_ПолучитьСписокМетодовБезТестов() Экспорт
	Результат = ГенераторТестов.ПолучитьСписокМетодовБезТестов();

	СписМетодовСтр = "";
	Для каждого Стр Из Результат Цикл
		СписМетодовСтр = СписМетодовСтр + "," + Стр.Имя;
	КонецЦикла;

	СписМетодов = ",ЭтоАдминистратор,ПолучитьСписокОбъектов";

	Ожидаем.Что(СписМетодовСтр).Равно(СписМетодов);
	
КонецПроцедуры

Процедура Тест_Должен_СоздатьТесты() Экспорт
	Результат = ГенераторТестов.СоздатьТесты();
	Сообщить(Результат);
	Обмен = Новый РаботаСТекстовымиФайлами;
	Данные = Обмен.ПолучитьТекстИзФайла("tests/out.os");

	Ожидаем.Что(Результат).Равно(Данные);

КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

Инициализация();